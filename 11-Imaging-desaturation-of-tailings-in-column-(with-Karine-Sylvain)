%% --------- 11- Imaging desaturation of tailings in column  --------------
%
% Adrien Dimech - Master Project - 28/05/2018
%
% -------------------------------------------------------------------------
% Matlab codes to prepare - process - visualize and interpret 3D time-lapse
% geolelectrical monitoring of a waste rock pile.
% -------------------------------------------------------------------------
%
% This Matlab code is used to carry laboratory column measurements to image
% desaturation of tailings in an instrumented laboratory column. ERT
% monitoring of the column is used to recover the relationship between bulk
% electrical resistivity, water electrical resistivity and moisture
% content. We try to develop a quantitative approach to link the 3D
% geophysical images of the bulk electrical resistivity and the moisture
% content in the tailings. This work is developped in close collaboration
% with hydrogeologists (Karine Sylvain) at Polytechnique Montréal.
% (Work in progress)
%
% Feel free to visit : https://www.researchgate.net/profile/Adrien_Dimech
% for more information about my research or contact me for more information
% and data files : adrien.dimech@gmail.com
%


clear all
close all


%data_hydro=xlsread('DATA_HYDRO.xlsx',1)

%% DONNÉES HYDROGÉOLOGIE
for o=1
    %% Géométrie de la colonne
    for o=1
        load ELEC
        % Représentation 3D de la colonne
        figure('color',[1 1 1])
        plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
        hold on
        
        [xc,yc,zc]=cylinder(13,40);
        zc=zc*40;
        surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.5)
        
        daspect([1,1,1])
        %     xlim([-10 10])
        %     ylim([-10 10])
        %     zlim([0 100])
        for i=1:length(ELEC(:,1))
            text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
        end
        
        grid
        grid minor
        
        xlabel('X (cm)')
        ylabel('Y (cm)')
        zlabel('Z (cm)')
        
        
    end
end

%% DONNÉES GÉOPHYSIQUE
for o=1
    %% 01 - CHARGEMENT DES DONNÉES
    for o=1
        % DATA_0_ESSAIS
        for o=1
            FichierExcel = 'DATA_0_ESSAIS.xlsx';
            
            [~,b]=xlsfinfo(FichierExcel);
            NbPages = length(b(1,:));
            
            % Enregistrement des donnees dans RAW_DATA
            ind=0;
            for i=1:NbPages
                ind=ind+1;
                RAW_DATA{ind} = xlsread(FichierExcel,i);
            end
        end
        
        % Écriture de DATA1
        
        %|----------------------------------DATA1--------------------------------|
        %|-----------------------------------------------------------------------|
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        %|   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |   9   |
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        %| date  |  C1   |  C2   |  P1   |  P2   | I (mA)| U (V) | R (O) | Var(%)|
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        
        % Correction temps
        %         T_REEL=7.371985098e+05;
        %         date_REEL=datestr(T_REEL)
        %
        %         T_ABEM=43150.3873726852;
        %         date_ABEM=datestr(T_ABEM)
        %
        %         T_CORR=T_REEL-T_ABEM;
        %         T_ABEM_CORR=T_ABEM+T_CORR;
        %         date_ABEM_CORR=datestr(T_ABEM_CORR)
        
        %         % Correction temps modification Yrro
        %         T_REEL_EAU=7.37197417e+05;
        %         date_REEL=datestr(T_REEL_EAU)
        %
        %         T_ABEM_EAU=7.371982450893518e+05;
        %         date_ABEM=datestr(T_ABEM_EAU)
        %
        %         T_CORR_EAU=T_REEL_EAU-T_ABEM_EAU;
        %         T_ABEM_EAU_CORR=T_ABEM_EAU+T_CORR_EAU;
        %         date_ABEM_EAU_CORR=datestr(T_ABEM_EAU_CORR)
        
        T_CORR_EAU=0;
        
        % TEMPS RÉÉL APPROXIMATIFS
        load T_REEL.mat
        
        %T_CORR=26.1345221;
        for i=1:length(RAW_DATA)
            DATA1{i}=RAW_DATA{i}(:,[1,5,8,11,14,21,22,23,25,26]);
            %             DATA1{i}(:,1)=DATA1{i}(:,1)+T_CORR;
            %             if i<9
            %                 DATA1{i}(:,1)=DATA1{i}(:,1)+T_CORR_EAU;
            %             end
            DATA1{i}(:,1)=ones(length(DATA1{i}(:,1)),1)*T_REEL(i);
        end
        
        
        % Facteurs géométriques
        load K;
        
        % Configuration focus
        %|----------------------------CONFIG FOCUS-----------------------------------------------
        %|---------------------------------------------------------------------------------------
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        %|   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |   9   |  10   |  11   |
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        %| date  |  C1   |  C2   |  P1   |  P2   | I (mA)| U (V) | R (O) | Var(%)| k (m) |rhoapp |
        %|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|
        
        for o=1
            CONFIG_FOCUS{1}=zeros(1,NbPages);
            CONFIG_TOT=zeros(1,4);
            count=0;
            for i=1:length(RAW_DATA)
                for j=1:length(DATA1{i}(:,1))
                    C1=DATA1{i}(j,2);
                    C2=DATA1{i}(j,3);
                    P1=DATA1{i}(j,4);
                    P2=DATA1{i}(j,5);
                    trouve=find(C1==CONFIG_TOT(:,1)&C2==CONFIG_TOT(:,2)&P1==CONFIG_TOT(:,3)&P2==CONFIG_TOT(:,4));
                    
                    if isempty(trouve)
                        count=count+1;
                        trouve=count;
                        CONFIG_FOCUS{trouve}=zeros(1,10);
                        CONFIG_TOT(trouve,1:4)=[C1,C2,P1,P2];
                    end
                    
                    CONFIG_FOCUS{trouve}(end+1,1:10)=DATA1{i}(j,:);
                    PROTOCOLE=K;
                    % FACTEUR GEOMETRIQUE / RHO APP / VAR SUR RHO APP
                    trouve_2=find(C1==PROTOCOLE(:,1)&C2==PROTOCOLE(:,2)&P1==PROTOCOLE(:,3)&P2==PROTOCOLE(:,4));
                    if isempty(trouve_2)==0
                        % facteur géométrique K
                        CONFIG_FOCUS{trouve}(end,11)=PROTOCOLE(trouve_2,5);
                        % Resistivité apparente
                        CONFIG_FOCUS{trouve}(end,12)=CONFIG_FOCUS{trouve}(end,9)*CONFIG_FOCUS{trouve}(end,11);
                        % Variation sur Rho App
                        CONFIG_FOCUS{trouve}(end,13)=CONFIG_FOCUS{trouve}(end,11)*CONFIG_FOCUS{trouve}(end,10);
                    else
                        CONFIG_FOCUS{trouve}(end,11:13)=[0,0,0];
                    end
                    
                end
            end
            
            % suppression des premieres lignes vierges
            for i=1:length(CONFIG_FOCUS)
                CONFIG_FOCUS{1,i}(1,:)=[];
                CONFIG_FOCUS{1,i}(CONFIG_FOCUS{1,i}(:,6)==0,:)=[];
            end
            
            % Filtrage des valeurs uniques
            actif_elim=0;
            for o=1
                if actif_elim==1
                    elimination=0;
                    for i=1:length(CONFIG_FOCUS)
                        if length(CONFIG_FOCUS{1,i}(:,1))<3
                            elimination(end+1,1)=i;
                        end
                    end
                    elimination(1,:)=[];
                    elimination=sortrows(elimination,-1);
                    
                    for i=1:length(elimination(:,1))
                        CONFIG_FOCUS(:,elimination(i,1))=[];
                        CONFIG_TOT(elimination(i,1),:)=[];
                    end
                end
            end
            
            % Filtrage des valeurs négatives
            actif_elim_neg=1;
            for o=1
                if actif_elim_neg==1
                    for i=1:length(CONFIG_FOCUS)
                        [lignes,~]=find(CONFIG_FOCUS{i}(:,12)<0);
                        CONFIG_FOCUS{i}(lignes,:)=[];
                    end
                end
            end
        end
    end
    
    %% 02 - AFFICHAGE DONNÉES BRUTES
    for o=1
        %% Toutes les données
        formatOut1 = 'hh:mm';
        formatOut2 = 'dd/mm-HH:MM';
        format=formatOut2;
        pas_de_temps=1/24/4;
        
        p = get(gcf,'Position');
        set(0,'DefaultFigurePosition',p);
        close all
        for o=1
            
            figure('color',[1 1 1])
            for i=1:length(CONFIG_FOCUS)
                %figure('color',[1 1 1])
                plot(CONFIG_FOCUS{1,i}(:,1),(CONFIG_FOCUS{1,i}(:,12)),'--.','LineWidth',0.01,'MarkerSize',20)
                hold on
                %errorbar(CONFIG_FOCUS{1,i}(:,1),(CONFIG_FOCUS{1,i}(:,12)),CONFIG_FOCUS{1,i}(:,13),'.','LineWidth',0.5,'Color','black','MarkerSize',0.25)
                
                
                %xlim([T_MIN T_MAX])
                ylabel({'Résistivité électrique apparente du milieu';'(\Omega.m)'},'FontSize',14)
                
                grid
                %title(['Configuration n°',num2str(i),' : C1 = ',num2str(CONFIG_FOCUS{1,i}(1,2)),' ; C2 = ',num2str(CONFIG_FOCUS{1,i}(1,3)),' ; P1 = ',num2str(CONFIG_FOCUS{1,i}(1,4)),' ; P2 = ',num2str(CONFIG_FOCUS{1,i}(1,5))],'FontSize',16)
                xlabel({['Date (format : ',format,')']},'FontSize',14)
                grid minor
                ax = gca;
                ax.XTick=[pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps))];
                ax.XTickLabel =[datestr(pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps)),format)];
                
            end
            
        end
        
        %% Tomographie simplifiée dans la colonne
        for o=1
            load config_1
            CONFIG=config_1;
            for o=1
                trouve=zeros(length(CONFIG),1);
                for j=1:length(CONFIG)
                    C1=CONFIG(j,1);
                    C2=CONFIG(j,2);
                    P1=CONFIG(j,3);
                    P2=CONFIG(j,4);
                    for i=1:length(CONFIG_FOCUS)
                        if C1==CONFIG_FOCUS{1,i}(:,2)&C2==CONFIG_FOCUS{1,i}(:,3)&P1==CONFIG_FOCUS{1,i}(:,4)&P2==CONFIG_FOCUS{1,i}(:,5)
                            trouve(j,1)=i;
                        end
                    end
                end
                
                % Affichage config_1
                figure('color',[1 1 1])
                for i=1:length(trouve)
                    ii=trouve(i);
                    Nom_config=['C1=',num2str(CONFIG_FOCUS{1,ii}(1,2)),' C2=',num2str(CONFIG_FOCUS{1,ii}(1,3)),' P1=',num2str(CONFIG_FOCUS{1,ii}(1,4)),' P2=',num2str(CONFIG_FOCUS{1,ii}(1,5))];
                    plot(CONFIG_FOCUS{1,ii}(:,1),(CONFIG_FOCUS{1,ii}(:,12)),'.-','LineWidth',2,'MarkerSize',15,'DisplayName',Nom_config)
                    hold on
                end
                %xlim([T_MIN T_MAX])
                ylabel({'Résistivité électrique apparente du milieu';'(\Omega.m)'},'FontSize',14)
                legend show
                grid
                %title(['Configuration n°',num2str(i),' : C1 = ',num2str(CONFIG_FOCUS{1,i}(1,2)),' ; C2 = ',num2str(CONFIG_FOCUS{1,i}(1,3)),' ; P1 = ',num2str(CONFIG_FOCUS{1,i}(1,4)),' ; P2 = ',num2str(CONFIG_FOCUS{1,i}(1,5))],'FontSize',16)
                xlabel({['Date (format : ',format,')']},'FontSize',14)
                grid minor
                ax = gca;
                ax.XTick=[pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps))];
                ax.XTickLabel =[datestr(pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps)),format)];
                grid minor
            end
            
        end
        
        %% Calcul de la position des mesures
        for o=1
            load ELEC
            
            % Représentation 3D de la colonne
            figure('color',[1 1 1])
            plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
            hold on
            
            [xc,yc,zc]=cylinder(13,40);
            zc=zc*40;
            surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.5)
            
            daspect([1,1,1])
            %     xlim([-10 10])
            %     ylim([-10 10])
            %     zlim([0 100])
            for i=1:length(ELEC(:,1))
                text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
            end
            
            grid
            grid minor
            
            xlabel('X (cm)')
            ylabel('Y (cm)')
            zlabel('Z (cm)')
            
            
            
            
            for i=1:length(CONFIG_FOCUS)
                C1=CONFIG_FOCUS{i}(1,2);
                C2=CONFIG_FOCUS{i}(1,3);
                P1=CONFIG_FOCUS{i}(1,4);
                P2=CONFIG_FOCUS{i}(1,5);
                X_mes=mean([ELEC(C1,1),ELEC(C2,1),ELEC(P1,1),ELEC(P2,1)]);
                Y_mes=mean([ELEC(C1,2),ELEC(C2,2),ELEC(P1,2),ELEC(P2,2)]);
                Z_mes=mean([ELEC(C1,3),ELEC(C2,3),ELEC(P1,3),ELEC(P2,3)]);
                CONFIG_FOCUS{i}(:,14:16)=[ones(length(CONFIG_FOCUS{i}(:,1)),1)*X_mes,ones(length(CONFIG_FOCUS{i}(:,1)),1)*Y_mes,ones(length(CONFIG_FOCUS{i}(:,1)),1)*Z_mes];
                plot3(X_mes,Y_mes,Z_mes,'.g','MarkerSize',20)
            end
        end
        
    end
    
    %% 03 - VISUALISATION 3D DU PROTOCOLE
    actif=0;
    for o=1
        if actif==1
            close all
            % Protocole
            for i=2:length(DATABASE(1,:))-1
                
                
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                
                % Représentation 3D de la colonne
                figure('color',[1 1 1])
                plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',30)
                hold on
                
                
                % Electrodes actives
                % C1
                plot3(ELEC(DATABASE(1,i),1),ELEC(DATABASE(1,i),2),ELEC(DATABASE(1,i),3),'.r','MarkerSize',40)
                % C2
                plot3(ELEC(DATABASE(2,i),1),ELEC(DATABASE(2,i),2),ELEC(DATABASE(2,i),3),'.r','MarkerSize',40)
                % P1
                plot3(ELEC(DATABASE(3,i),1),ELEC(DATABASE(3,i),2),ELEC(DATABASE(3,i),3),'.b','MarkerSize',40)
                % P2
                plot3(ELEC(DATABASE(4,i),1),ELEC(DATABASE(4,i),2),ELEC(DATABASE(4,i),3),'.b','MarkerSize',40)
                
                % Point de mesure
                for j=2:i-1
                    plot3(DATABASE(5,j),DATABASE(6,j),DATABASE(7,j),'.g','MarkerSize',30)
                end
                plot3(DATABASE(5,i),DATABASE(6,i),DATABASE(7,i),'.g','MarkerSize',40)
                plot3(DATABASE(5,i),DATABASE(6,i),DATABASE(7,i),'*g','MarkerSize',20)
                
                
                [xc,yc,zc]=cylinder(13,40);
                zc=zc*40;
                surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.2)
                
                daspect([1,1,1])
                %     xlim([-10 10])
                %     ylim([-10 10])
                %     zlim([0 100])
                for teet=1:16
                    text(ELEC(teet,1)+1,ELEC(teet,2)-1,ELEC(teet,3),num2str(teet));
                end
                
                grid
                grid minor
                
                xlabel('X (cm)')
                ylabel('Y (cm)')
                zlabel('Z (cm)')
                
                
                saveas(gcf,['image_',num2str(i-1),'.jpg'])
            end
        end
    end
    
    %% 04 - GÉNÉRATION DE LA BASE DE DONNÉES FINALE
    for o=1
        % Matrice des temps interpolés
        dt_loc=1; % en minutes
        dt_loc=dt_loc/(24*60);
        
        % Détermination de la configuration la plus souvent effectuée
        for o=1
            size_CONFIG=0;
            for ii=1:length(CONFIG_FOCUS)
                size_CONFIG=[size_CONFIG;length(CONFIG_FOCUS{ii}(:,1))];
            end
            size_CONFIG(1,:)=[];
            [~,ligne_best]=max(size_CONFIG(:,1));
            Mat_TEMPS_REEL=CONFIG_FOCUS{ligne_best}(:,1);
        end
        
        t_min=(min(CONFIG_FOCUS{ligne_best}(:,1)));
        t_max=(max(CONFIG_FOCUS{ligne_best}(:,1)));
        matrice_temps=t_min:dt_loc:t_max;
        
        % BASE DE DONNÉES FINALES
        %   /       1       2       3       4       5       6       7
        %   1       0       C1#1    C1#2	C1#3	C1#4	C1#5	C1#6
        %   2       0       C2#1	C2#2	C2#3	C2#4	C2#5	C2#6
        %   3       0       P1#1	P1#2	P1#3	P1#4	P1#5	P1#6
        %   4       0       P2#1	P2#2	P2#3	P2#4	P2#5	P2#6
        %   5       0       X#1     X#2     X#3     X#4     X#5     X#6
        %   6       0       Y#1     Y#2     Y#3     Y#4     Y#5     Y#6
        %   7       0       Z#1     Z#2     Z#3     Z#4     Z#5     Z#6
        %   8       t1    rhoapp#1 rhoapp#2	rhoapp#3
        %   9       t2    rhoapp#1 rhoapp#2	rhoapp#3
        %   10      t3    rhoapp#1 rhoapp#2	rhoapp#3
        
        clear DATABASE
        DATABASE=[[0;0;0;0;0;0;0];matrice_temps'];
        for i=1:length(CONFIG_FOCUS)
            DATABASE(1:4,i+1)=CONFIG_FOCUS{i}(1,2:5)';
            DATABASE(5:7,i+1)=CONFIG_FOCUS{i}(1,14:16)';
            DATABASE(8:end,i+1)=interp1(CONFIG_FOCUS{i}(:,1),CONFIG_FOCUS{i}(:,12),matrice_temps)';
        end
        figure('color',[1 1 1])
        plot(DATABASE(8:end,1),DATABASE(8:end,3),'ok')
        
    end
    
    %% 05 - PROFIL VERTICAL DE RÉSISTIVITÉ ÉLECTRIQUE
    for o=1
        clear DATABASE_VERT_1
        colonnes=find(DATABASE(5,:)==0);
        DATABASE_VERT_1=[DATABASE(:,1),sortrows(DATABASE(:,colonnes)',7)'];
        
        
        figure
        plot(DATABASE_VERT_1(200,2:end),DATABASE_VERT_1(7,2:end),'.','Markersize',20)
        hold on
        plot(DATABASE_VERT_1(300,2:end),DATABASE_VERT_1(7,2:end),'.','Markersize',20)
        plot(DATABASE_VERT_1(1000,2:end),DATABASE_VERT_1(7,2:end),'.','Markersize',20)
        plot(DATABASE_VERT_1(2000,2:end),DATABASE_VERT_1(7,2:end),'.','Markersize',20)
        plot(DATABASE_VERT_1(8000,2:end),DATABASE_VERT_1(7,2:end),'.','Markersize',20)
        
        
    end
    
    
    
    %% AFFICHAGE DES VALEURS DE RÉSISTIVITÉ DU MILIEU 3D scatter
    actif=1;
    for o=1
        
        if actif==1
            close all
            
            % Selection de la période de temps interessante
            for o=1
                formatOut1 = 'hh:mm';
                formatOut2 = 'dd/mm-HH:MM';
                format=formatOut2;
                pas_de_temps=1/12;
                
                figure('Color', [ 1 1 1])
                
                % Affichage des valeurs moyennes
                MEAN_DATABASE=[DATABASE(8:end,1),mean(DATABASE(8:end,2:end)','Omitnan')'];
                
                % Affichage valeurs moyennes
                plot(MEAN_DATABASE(:,1),MEAN_DATABASE(:,2),'-k','linewidth',2)
                
                % Affichage temps réels d'acquisition
                for o=1
                    % Détermination de la configuration la plus souvent effectuée
                    for o=1
                        size_CONFIG=0;
                        for ii=1:length(CONFIG_FOCUS)
                            size_CONFIG=[size_CONFIG;length(CONFIG_FOCUS{ii}(:,1))];
                        end
                        size_CONFIG(1,:)=[];
                        [~,ligne_best]=max(size_CONFIG(:,1));
                        Mat_TEMPS_REEL=CONFIG_FOCUS{ligne_best}(:,1);
                    end
                    
                    % Affichage de la valeur moyenne pour chaque temps réel
                    for ii=1:length(Mat_TEMPS_REEL)
                    end
                    
                    title('Variation moyenne des résistivités dans la colonne (Ohm.m)','FontSize',16)
                    ylabel({'Résistivité électrique apparente du milieu';'(\Omega.m)'},'FontSize',14)
                    
                    grid
                    %title(['Configuration n°',num2str(i),' : C1 = ',num2str(CONFIG_FOCUS{1,i}(1,2)),' ; C2 = ',num2str(CONFIG_FOCUS{1,i}(1,3)),' ; P1 = ',num2str(CONFIG_FOCUS{1,i}(1,4)),' ; P2 = ',num2str(CONFIG_FOCUS{1,i}(1,5))],'FontSize',16)
                    xlabel({['Date (format : ',format,')']},'FontSize',14)
                    grid minor
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(CONFIG_FOCUS{1,i}(:,1)/pas_de_temps)),format)];
                    
                end
                
                
                
                
                for t=1;
                    actif_tronc=1;
                    instant=t;
                    
                    for o=1
                        p = get(gcf,'Position');
                        set(0,'DefaultFigurePosition',p);
                        %close all
                        
                        
                        
                        % Traitement de la base de données
                        for o=1
                            if actif_tronc==1 & t==1
                                figure('Color', [ 1 1 1])
                                histogram(log(DATABASE(8:end,2:end)))
                                title('Histogramme de valeurs de résistivité apparente (Ohm.m)','FontSize',16)
                                %axis off
                                TicksM = min(min(log(DATABASE(8:end,2:end)))):(max(max(log(DATABASE(8:end,2:end))))-min(min(log(DATABASE(8:end,2:end)))))/10:max(max(log(DATABASE(8:end,2:end))));
                                TicksL = round(exp(TicksM),0);
                                ax = gca;
                                ax.XTick=TicksM;
                                ax.XTickLabel =round(exp(TicksM),0);
                                grid
                                grid minor
                                
                                
                                % Troncature MIN au choix de l'utilisateur
                                p = get(gcf,'Position');
                                for o=1
                                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur minimale de resistivité');
                                    
                                    txt = uicontrol('Parent',d,...
                                        'Style','text',...
                                        'Position',[100 200 210 80],...
                                        'String',['Select the minimum resistivity value needed in Ohm.m (log values)'],...
                                        'Fontsize',10);
                                    
                                    btn = uicontrol('Parent',d,...
                                        'Position',[170 20 70 25],...
                                        'String','Close',...
                                        'Callback','delete(gcf)');
                                end % Dialog box
                                
                                CutOff_MIN=ginput(1);
                                CutOff_MIN=round(CutOff_MIN(:,1),2);
                                
                                % Troncature MAX au choix de l'utilisateur
                                p = get(gcf,'Position');
                                for o=1
                                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur maximale de resistivité');
                                    
                                    txt = uicontrol('Parent',d,...
                                        'Style','text',...
                                        'Position',[100 200 210 80],...
                                        'String',['Select the maximum resistivity value needed in Ohm.m (log values)'],...
                                        'Fontsize',10);
                                    
                                    btn = uicontrol('Parent',d,...
                                        'Position',[170 20 70 25],...
                                        'String','Close',...
                                        'Callback','delete(gcf)');
                                end % Dialog box
                                
                                CutOff_MAX=ginput(1);
                                CutOff_MAX=round(CutOff_MAX(:,1),2);
                                
                                close
                                % echelle de couleur de 0 a 1
                                % echelle de valeur de R_min a R_max
                                DATABASE_2=DATABASE;
                                DATABASE_2(8:end,2:end)=log(DATABASE_2(8:end,2:end));
                                mat_1=DATABASE_2(8:end,2:end)<=CutOff_MIN;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=CutOff_MIN;
                                
                                mat_1=DATABASE_2(8:end,2:end)>=CutOff_MAX;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=CutOff_MAX;
                                
                                DATABASE_2(8:end,2:end)=DATABASE_2(8:end,2:end)-CutOff_MIN;
                                DATABASE_2(8:end,2:end)=DATABASE_2(8:end,2:end)/(CutOff_MAX-CutOff_MIN)*100;
                                
                                % 0->1
                                mat_1=DATABASE_2(8:end,2:end)==0;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=1;
                            end
                        end
                        
                        % Représentation 3D de la colonne
                        for o=1
                            figure('color',[1 1 1])
                            plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
                            hold on
                            
                            [xc,yc,zc]=cylinder(13,40);
                            zc=zc*40;
                            surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.3)
                            
                            daspect([1,1,1])
                            %     xlim([-10 10])
                            %     ylim([-10 10])
                            %     zlim([0 100])
                            for i=1:32
                                text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
                            end
                            
                            grid
                            grid minor
                            
                            xlabel('X (cm)')
                            ylabel('Y (cm)')
                            zlabel('Z (cm)')
                            
                        end
                        
                        % Affichage des données de résistivité
                        for o=1
                            instant_t=DATABASE_2(instant,1);
                            colormap ((jet(100)));
                            cmap = colormap;
                            for i=2:length(DATABASE_2(1,:))
                                ind_color=round(DATABASE_2(instant,i));
                                if ind_color==0
                                    ind_color=1;
                                end
                                
                                if isnan(ind_color)==0
                                    plot3(DATABASE_2(5,i),DATABASE_2(6,i),DATABASE_2(7,i),'.','Color',[cmap(ind_color,1) cmap(ind_color,2) cmap(ind_color,3)],'MarkerSize',30)
                                end
                                hold on
                                [1,round(i/length(DATABASE_2(1,:))*100)]
                            end
                            daspect([1 1 1])
                            plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'k.','MarkerSize',7.5)
                            
                            % Colorbar
                            % Légende
                            clear colorbar
                            colormap ((jet(100)));
                            colorbar;
                            caxis([0 100]);
                            TicksM = [1;20;40;60;80;100];
                            TicksL = round(exp((TicksM/100)*(CutOff_MAX-CutOff_MIN)+CutOff_MIN),0);
                            
                            
                            c=colorbar;
                            c.Label.String = 'Résistivité électrique apparente (\Omega.m)';
                            c.Label.FontWeight='bold';
                            c.Label.FontSize=14;
                            c.Ticks=TicksM;
                            c.TickLabels={num2str(TicksL)};
                            c.Location='east';
                            
                            
                            daspect([1,1,1])
                            title(['Distribution des résistivités électriques apparentes dans la colonne le ',datestr(DATABASE_2(instant,1),'dd/mm'),' à ',datestr(DATABASE_2(instant,1),'HH:MM')],'Fontsize',15)
                            
                            xlim([-15 15])
                            ylim([-15 15])
                        end
                        
                        % Indication de la date
                        for o=1
                            DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                            
                            
                            pas_de_temps=5/24;
                            formatOut1 = 'dd/mm HH:MM';
                            formatOut2= 'dd/mm HH:MM AM';
                            formatOut3= 'HH:MM';
                            format=formatOut1;
                            
                            %axes('Position',[.57 .6 .4 .4],'Visible','off')
                            axes('Position',[.05 .6 .25 .25])
                            %box off
                            hold on
                            
                            plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                            %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                            %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                            grid
                            grid minor
                            
                            title('Évolution globale de la résistivité apparente')
                            
                            ax = gca;
                            ax.XTick=[pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps))];
                            ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps)),format)];
                            
                            ax.XTickLabelRotation=45;
                            
                            plot(DATABASE_MEAN(instant-7,1),DATABASE_MEAN(instant-7,2),'.r','MarkerSize',30)
                        end
                        saveas(gcf,['image_',num2str(t),'.jpg'])
                    end
                end
            end
        end
        
        %% AFFICHAGE DES VALEURS DE RÉSISTIVITÉ DU MILIEU 2D
        % Identification des temps à afficher
        p = get(gcf,'Position');
        set(0,'DefaultFigurePosition',p);
        close all
        actif=1;
        for o=1
            if actif==1
                for o=1
                    DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                    figure('color',[1 1 1])
                    
                    pas_de_temps=5/24;
                    formatOut1 = 'dd/mm HH:MM';
                    formatOut2= 'dd/mm HH:MM AM';
                    formatOut3= 'HH:MM';
                    format=formatOut1;
                    
                    
                    hold on
                    
                    plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                    grid
                    grid minor
                    
                    title('Évolution globale de la résistivité apparente')
                    
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                    
                    ax.XTickLabelRotation=45;
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the starting time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_init_1=ginput(1);
                    T_init_1=round(T_init_1(:,1),2);
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the ending time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_fin_1=ginput(1);
                    T_fin_1=round(T_fin_1(:,1),2);
                    
                    xlim([T_init_1 T_fin_1])
                end
                
                close all
                t_max=2;
                for t=1:t_max;
                    actif_tronc=1;
                    %instant=2605+t*1;
                    %instant=2375+t*2;
                    %instant=95+t*10;
                    %T_INIT=425;
                    %T_INIT=120;
                    [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                    [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                    dT_ligne=round((T_FIN-T_INIT)/30);
                    %dT=4;
                    dT=dT_ligne;
                    
                    instant=T_INIT+t*dT;
                    instant_max=T_INIT+t_max*dT;
                    instant_min=T_INIT;
                    
                    for o=1
                        p = get(gcf,'Position');
                        set(0,'DefaultFigurePosition',p);
                        %close all
                        
                        % Traitement de la base de données
                        for o=1
                            if actif_tronc==1 & t==1
                                figure('Color', [ 1 1 1])
                                histogram(log(DATABASE(8:end,2:end)))
                                title('Histogramme de valeurs de résistivité apparente (Ohm.m)','FontSize',16)
                                %axis off
                                TicksM = min(min(log(DATABASE(8:end,2:end)))):(max(max(log(DATABASE(8:end,2:end))))-min(min(log(DATABASE(8:end,2:end)))))/10:max(max(log(DATABASE(8:end,2:end))));
                                TicksL = round(exp(TicksM),0);
                                ax = gca;
                                ax.XTick=TicksM;
                                ax.XTickLabel =round(exp(TicksM),0);
                                grid
                                grid minor
                                
                                
                                % Troncature MIN au choix de l'utilisateur
                                p = get(gcf,'Position');
                                for o=1
                                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur minimale de resistivité');
                                    
                                    txt = uicontrol('Parent',d,...
                                        'Style','text',...
                                        'Position',[100 200 210 80],...
                                        'String',['Select the minimum resistivity value needed in Ohm.m (log values)'],...
                                        'Fontsize',10);
                                    
                                    btn = uicontrol('Parent',d,...
                                        'Position',[170 20 70 25],...
                                        'String','Close',...
                                        'Callback','delete(gcf)');
                                end % Dialog box
                                
                                CutOff_MIN=ginput(1);
                                CutOff_MIN=round(CutOff_MIN(:,1),2);
                                
                                % Troncature MAX au choix de l'utilisateur
                                p = get(gcf,'Position');
                                for o=1
                                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur maximale de resistivité');
                                    
                                    txt = uicontrol('Parent',d,...
                                        'Style','text',...
                                        'Position',[100 200 210 80],...
                                        'String',['Select the maximum resistivity value needed in Ohm.m (log values)'],...
                                        'Fontsize',10);
                                    
                                    btn = uicontrol('Parent',d,...
                                        'Position',[170 20 70 25],...
                                        'String','Close',...
                                        'Callback','delete(gcf)');
                                end % Dialog box
                                
                                CutOff_MAX=ginput(1);
                                CutOff_MAX=round(CutOff_MAX(:,1),2);
                                
                                close
                                % echelle de couleur de 0 a 1
                                % echelle de valeur de R_min a R_max
                                DATABASE_2=DATABASE;
                                
                                %                         load K_correctif
                                %                         for j=8:length(DATABASE_2(:,1))
                                %                             DATABASE_2(j,2:end)=DATABASE_2(j,2:end).*K_correctif;
                                %                         end
                                
                                
                                DATABASE_2(8:end,2:end)=log(DATABASE_2(8:end,2:end));
                                mat_1=DATABASE_2(8:end,2:end)<=CutOff_MIN;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=CutOff_MIN;
                                
                                mat_1=DATABASE_2(8:end,2:end)>=CutOff_MAX;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=CutOff_MAX;
                                
                                DATABASE_2(8:end,2:end)=DATABASE_2(8:end,2:end)-CutOff_MIN;
                                DATABASE_2(8:end,2:end)=DATABASE_2(8:end,2:end)/(CutOff_MAX-CutOff_MIN)*100;
                                
                                % 0->1
                                mat_1=DATABASE_2(8:end,2:end)==0;
                                mat_2=[zeros(length(DATABASE_2(:,1))-7,1),mat_1];
                                mat_3=[zeros(7,length(DATABASE_2(1,:)));mat_2];
                                DATABASE_2(logical(mat_3))=1;
                            end
                        end
                        
                        % Représentation 3D de la colonne
                        for o=1
                            %                 figure('color',[1 1 1])
                            %                 plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
                            %                 hold on
                            %
                            %                 [xc,yc,zc]=cylinder(13,40);
                            %                 zc=zc*40;
                            %                 surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.3)
                            %
                            %                 daspect([1,1,1])
                            %                 %     xlim([-10 10])
                            %                 %     ylim([-10 10])
                            %                 %     zlim([0 100])
                            %                 for i=1:16
                            %                     text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
                            %                 end
                            %
                            %                 grid
                            %                 grid minor
                            %
                            %                 xlabel('X (cm)')
                            %                 ylabel('Y (cm)')
                            %                 zlabel('Z (cm)')
                            %
                            %                 % Instru hydrogéo
                            %                 sonde=EC_5_39;
                            %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                            %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                            %                 sonde=GS3_1_8;
                            %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                            %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                            %                 sonde=GS3_2_35;
                            %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                            %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                            %                 sonde=s5TE_35;
                            %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                            %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                            %                 sonde=s5TM_16;
                            %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                            %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        end
                        
                        
                        
                        % Maillage et imagerie 2D de la colonne
                        for o=1
                            Xmin=-13;
                            Xmax=13;
                            Zmin=0;
                            Zmax=40;
                            pas_X=0.05;
                            pas_Z=0.05;
                            [X_coupe,Z_coupe] = meshgrid(Xmin:pas_X:Xmax,Zmin:pas_Z:Zmax);
                            
                            X_DATA=DATABASE_2(5,2:end)';
                            Z_DATA=DATABASE_2(7,2:end)';
                            V_DATA=DATABASE_2(instant,2:end)';
                            value = griddata(X_DATA,Z_DATA,V_DATA,X_coupe,Z_coupe,'cubic');
                            
                            figure('Color', [ 1 1 1])
                            colormap ((jet(100)));
                            cmap = colormap;
                            pcolor(X_coupe,Z_coupe,value);
                            shading flat
                            hold on
                            contour(X_coupe,Z_coupe,value,10,'LineWidth',0.7,'LineColor','k')
                            daspect([1 1 1])
                            
                            % Electrodes
                            %plot(ELEC(:,1),ELEC(:,3),'k.','MarkerSize',10)
                            % Colorbar
                            % Légende
                            caxis([0 100]);
                            TicksM = [1;20;40;60;80;100];
                            TicksL = round(exp((TicksM/100)*(CutOff_MAX-CutOff_MIN)+CutOff_MIN),0);
                            
                            
                            c=colorbar;
                            c.Label.String = 'Résistivité électrique apparente (\Omega.m)';
                            c.Label.FontWeight='bold';
                            c.Label.FontSize=14;
                            c.Ticks=TicksM;
                            c.TickLabels={num2str(TicksL)};
                            c.Location='eastoutside';
                            
                            title(['Distribution des résistivités électriques apparentes dans la colonne le ',datestr(DATABASE_2(instant,1),'dd/mm'),' à ',datestr(DATABASE_2(instant,1),'HH:MM')],'Fontsize',15)
                        end
                        % Indication de la date
                        for o=1
                            DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                            
                            
                            pas_de_temps=1/24/15;
                            %pas_de_temps=1/24;
                            formatOut1 = 'dd/mm HH:MM';
                            formatOut2= 'dd/mm HH:MM AM';
                            formatOut3= 'dd/mm HH:MM';
                            format=formatOut3;
                            
                            %axes('Position',[.57 .6 .4 .4],'Visible','off')
                            axes('Position',[.05 .6 .25 .25])
                            %box off
                            hold on
                            
                            plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                            %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                            %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                            grid
                            grid minor
                            xlim([DATABASE_MEAN(instant_min,1) DATABASE_MEAN(instant_max,1)])
                            title('Évolution globale de la résistivité apparente')
                            
                            ax = gca;
                            ax.XTick=[pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps))];
                            ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps)),format)];
                            
                            ax.XTickLabelRotation=45;
                            
                            plot(DATABASE_MEAN(instant-7,1),DATABASE_MEAN(instant-7,2),'.r','MarkerSize',30)
                        end
                        
                        saveas(gcf,['image_',num2str(t),'.jpg'])
                        
                        
                    end
                end
            end
        end
        
        %% AFFICHAGE DES VALEURS DE RÉSISTIVITÉ DU MILIEU 2D EN VARIATION RELATIVE
        % Identification des temps à afficher
        actif=0;
        for o=1
            if actif==1
                for o=1
                    DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                    figure('color',[1 1 1])
                    
                    pas_de_temps=5/24;
                    formatOut1 = 'dd/mm HH:MM';
                    formatOut2= 'dd/mm HH:MM AM';
                    formatOut3= 'HH:MM';
                    format=formatOut1;
                    
                    
                    hold on
                    
                    plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                    grid
                    grid minor
                    
                    title('Évolution globale de la résistivité apparente')
                    
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                    
                    ax.XTickLabelRotation=45;
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the starting time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_init_1=ginput(1);
                    T_init_1=round(T_init_1(:,1),2);
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the ending time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_fin_1=ginput(1);
                    T_fin_1=round(T_fin_1(:,1),2);
                    
                    xlim([T_init_1 T_fin_1])
                end
                
                close all
                t_max=30;
                
                [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                dT_ligne=round((T_FIN-T_INIT)/30);
                %dT=4;
                dT=dT_ligne;
                
                instant_max=T_INIT+t_max*dT;
                instant_min=T_INIT;
                
                DATABASE_DIFF=DATABASE(8:end,:);
                for j=1:length(DATABASE_DIFF(1,:))-1
                    DATABASE_DIFF(:,j+1)=DATABASE_DIFF(:,j+1)-DATABASE(instant_min,j+1);
                    DATABASE_DIFF(DATABASE_DIFF(:,j+1)>0,j+1)=99;
                    DATABASE_DIFF(DATABASE_DIFF(:,j+1)<0,j+1)=-99;
                end
                DATABASE_DIFF=[DATABASE(1:7,:);DATABASE_DIFF];
                
                DATABASE_2=DATABASE_DIFF;
                
                
                
                
                % CALCUL DE LA BASE DE DONNÉES DE VARIATIONS RELATIVES
                % Représentation 3D de la colonne
                for o=1
                    %                 figure('color',[1 1 1])
                    %                 plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
                    %                 hold on
                    %
                    %                 [xc,yc,zc]=cylinder(13,40);
                    %                 zc=zc*40;
                    %                 surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.3)
                    %
                    %                 daspect([1,1,1])
                    %                 %     xlim([-10 10])
                    %                 %     ylim([-10 10])
                    %                 %     zlim([0 100])
                    %                 for i=1:16
                    %                     text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
                    %                 end
                    %
                    %                 grid
                    %                 grid minor
                    %
                    %                 xlabel('X (cm)')
                    %                 ylabel('Y (cm)')
                    %                 zlabel('Z (cm)')
                    %
                    %                 % Instru hydrogéo
                    %                 sonde=EC_5_39;
                    %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                    %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    %                 sonde=GS3_1_8;
                    %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                    %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    %                 sonde=GS3_2_35;
                    %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                    %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    %                 sonde=s5TE_35;
                    %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                    %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    %                 sonde=s5TM_16;
                    %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                    %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                end
                
                for t=1:t_max;
                    actif_tronc=1;
                    
                    instant=T_INIT+t*dT;
                    
                    % Maillage et imagerie 2D de la colonne
                    for o=1
                        Xmin=-13;
                        Xmax=13;
                        Zmin=0;
                        Zmax=40;
                        pas_X=0.05;
                        pas_Z=0.05;
                        [X_coupe,Z_coupe] = meshgrid(Xmin:pas_X:Xmax,Zmin:pas_Z:Zmax);
                        
                        X_DATA=DATABASE_2(5,2:end)';
                        Z_DATA=DATABASE_2(7,2:end)';
                        V_DATA=DATABASE_2(instant,2:end)';
                        value = griddata(X_DATA,Z_DATA,V_DATA,X_coupe,Z_coupe,'cubic');
                        
                        figure('Color', [ 1 1 1])
                        colormap ((jet(100)));
                        cmap = colormap;
                        pcolor(X_coupe,Z_coupe,value);
                        shading flat
                        hold on
                        contour(X_coupe,Z_coupe,value,10,'LineWidth',0.7,'LineColor','k')
                        daspect([1 1 1])
                        
                        % Electrodes
                        %plot(ELEC(:,1),ELEC(:,3),'k.','MarkerSize',10)
                        % Colorbar
                        % Légende
                        caxis([0 100]);
                        TicksM = [1;20;40;60;80;100];
                        %TicksL = round(exp((TicksM/100)*(CutOff_MAX-CutOff_MIN)+CutOff_MIN),0);
                        
                        
                        c=colorbar;
                        c.Label.String = 'Résistivité électrique apparente (\Omega.m)';
                        c.Label.FontWeight='bold';
                        c.Label.FontSize=14;
                        c.Ticks=TicksM;
                        %c.TickLabels={num2str(TicksL)};
                        c.Location='eastoutside';
                        
                        title(['Distribution des résistivités électriques apparentes dans la colonne le ',datestr(DATABASE_2(instant,1),'dd/mm'),' à ',datestr(DATABASE_2(instant,1),'HH:MM')],'Fontsize',15)
                    end
                    % Indication de la date
                    for o=1
                        DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                        
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        axes('Position',[.05 .6 .25 .25])
                        %box off
                        hold on
                        
                        plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                        grid
                        grid minor
                        xlim([DATABASE_MEAN(instant_min,1) DATABASE_MEAN(instant_max,1)])
                        title('Évolution globale de la résistivité apparente')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_2(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        plot(DATABASE_MEAN(instant-7,1),DATABASE_MEAN(instant-7,2),'.r','MarkerSize',30)
                    end
                    
                    saveas(gcf,['image_',num2str(t),'.jpg'])
                    
                    
                end
            end
        end
        
    end
end

%% COUPLAGE DONNÉES GÉOPHYSIQUE ET HYDRO
for o=1
    
    %% Courbe de CRE
    actif=0;
    for o=1
        if actif==1
            for o=1
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                for o=1
                    DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                    figure('color',[1 1 1])
                    
                    pas_de_temps=5/24;
                    formatOut1 = 'dd/mm HH:MM';
                    formatOut2= 'dd/mm HH:MM AM';
                    formatOut3= 'HH:MM';
                    format=formatOut1;
                    
                    
                    hold on
                    
                    plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                    grid
                    grid minor
                    
                    title('Évolution globale de la résistivité apparente')
                    
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                    
                    ax.XTickLabelRotation=45;
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the starting time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_init_1=ginput(1);
                    T_init_1=round(T_init_1(:,1),2);
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the ending time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_fin_1=ginput(1);
                    T_fin_1=round(T_fin_1(:,1),2);
                    
                    xlim([T_init_1 T_fin_1])
                end
                
                close all
                t_max=30;
                
                % MISE EN FORME DATA GÉOPHYSIQUE
                for o=1
                    [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                    [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                    
                    DATABASE_3=DATABASE(T_INIT:T_FIN,:);
                    DATABASE_3=[DATABASE(1:7,:);DATABASE_3];
                    
                    load config_1
                    load config_2
                    CONFIG=[config_1;config_2];
                    
                    
                    for o=1
                        trouve=zeros(length(CONFIG),1);
                        for j=1:length(CONFIG)
                            C1=CONFIG(j,1);
                            C2=CONFIG(j,2);
                            P1=CONFIG(j,3);
                            P2=CONFIG(j,4);
                            for i=1:length(DATABASE_3(1,:))
                                if C1==DATABASE_3(1,i)&C2==DATABASE_3(2,i)&P1==DATABASE_3(3,i)&P2==DATABASE_3(4,i)
                                    trouve(j,1)=i;
                                end
                            end
                        end
                        
                        DATABASE_4=[DATABASE_3(:,1),DATABASE_3(:,trouve)];
                    end
                end
                
                % MISE EN FORME DATA HYDRO
                for o=1
                    [~,T_INIT_hydro]=min(abs(EC_5_39.date(:,1)-T_init_1+0.004));
                    [~,T_FIN_hydro]=min(abs(EC_5_39.date(:,1)-T_fin_1+0.004));
                    
                    % vwc
                    for o=1
                        DATABASE_HYDRO.vwc=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[GS3_1_8.position';GS3_1_8.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[s5TM_16.position';s5TM_16.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[GS3_2_35.position';GS3_2_35.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[s5TE_35.position';s5TE_35.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[EC_5_39.position';EC_5_39.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.vwc=[DATABASE_HYDRO.vwc(4:end,1),median(DATABASE_HYDRO.vwc(4:end,:)','Omitnan')'];
                    end
                    
                    % temp
                    for o=1
                        DATABASE_HYDRO.temp=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[GS3_1_8.position';GS3_1_8.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[s5TM_16.position';s5TM_16.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[GS3_2_35.position';GS3_2_35.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[s5TE_35.position';s5TE_35.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.temp=[DATABASE_HYDRO.temp(4:end,1),median(DATABASE_HYDRO.temp(4:end,:)','Omitnan')'];
                    end
                    
                    % cond
                    for o=1
                        DATABASE_HYDRO.cond=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[GS3_1_8.position';GS3_1_8.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[GS3_2_35.position';GS3_2_35.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[s5TE_35.position';s5TE_35.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.cond=[DATABASE_HYDRO.cond(4:end,1),median(DATABASE_HYDRO.cond(4:end,:)','Omitnan')'];
                    end
                    
                    % cond_eau
                    for o=1
                        DATABASE_HYDRO.cond_eau=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[GS3_1_8.position';GS3_1_8.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[GS3_2_35.position';GS3_2_35.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[s5TE_35.position';s5TE_35.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.cond_eau=[DATABASE_HYDRO.cond_eau(4:end,1),median(DATABASE_HYDRO.cond_eau(4:end,:)','Omitnan')'];
                    end
                end
                
                
                % Profil de résistivité électrique
                figure('color',[1 1 1])
                instant=1;
                plot(DATABASE_4(instant+7,2:end),DATABASE_4(7,2:end),'.k','MarkerSize',20)
                
                figure('color',[1 1 1])
                
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                
                
                close all
                Matrix_instant=[[10:2:20],[21:1:40],[45:20:120]];
                Matrix_instant=[[10:3:30],[31:1:50],[51:20:120]];
                %Matrix_instant=[40];
                %Matrix_instant=[10];
                
                for t=1:length(Matrix_instant)
                    instant=Matrix_instant(t);
                    %for instant=25
                    
                    % Corps principal de la figure
                    for o=1
                        figure('color',[1 1 1])
                        subplot(2,3,[2,3,5,6])
                        
                        % Profil de conductivité électrique
                        for o=1
                            PROFIL_VERT_init=[DATABASE_4(7,2:end)',DATABASE_4(min(Matrix_instant)+7,2:end)'];
                            PROFIL_VERT_init=sortrows(PROFIL_VERT_init);
                            
                            PROFIL_VERT=[DATABASE_4(7,2:end)',DATABASE_4(instant+7,2:end)'];
                            PROFIL_VERT=sortrows(PROFIL_VERT);
                            
                            % CONDUCTIVITÉ
                            %semilogx(10000./PROFIL_VERT(:,2),PROFIL_VERT(:,1),'.-k','MarkerSize',20)
                            % plot(DATABASE_4(7,2:end),10000./DATABASE_4(instant+7,2:end),'.k','MarkerSize',20)
                            
                            % RÉSISTIVITÉ
                            semilogx(PROFIL_VERT(:,2),PROFIL_VERT(:,1),'.-k','MarkerSize',20)
                            hold on
                            semilogx(PROFIL_VERT_init(:,2),PROFIL_VERT_init(:,1),'.--k','MarkerSize',10)
                            %xlim([0.5 300])
                            xlim([20 20000])
                            
                            title(['Profil vertical de résistivité électrique apparente dans la colonne le ',datestr(DATABASE_4(instant+7,1),'dd/mm'),' à ',datestr(DATABASE_4(instant+7,1),'HH:MM')],'Fontsize',15)
                            % title(['Profil vertical de conductivité électrique apparente dans la colonne le ',datestr(DATABASE_4(instant+7,1),'dd/mm'),' à ',datestr(DATABASE_4(instant+7,1),'HH:MM')],'Fontsize',15)
                            
                            ylabel('Élevation dans la colonne (cm)','Fontsize',14)
                            %xlabel('Conductivité électrique apparente dans la colonne (\muS/cm)','Fontsize',14)
                            xlabel('Résistivité électrique apparente dans la colonne (\Omega.m)','Fontsize',14)
                            
                            ax1 = gca; % current axes
                            
                            ylim([5 40])
                            ax1_pos = ax1.Position; % position of first axes
                            
                            grid
                            grid minor
                        end
                        
                        % Affichage des données VWC
                        for o=1
                            ax2 = axes('Position',ax1_pos,...
                                'XAxisLocation','bottom',...
                                'YAxisLocation','left',...
                                'Color','none');
                            
                            Mat_Z=DATABASE_HYDRO.vwc(3,2:end);
                            dt=4.316565018182223e+04-4.316564653000000e+04;
                            [~,ligne]=min(abs(DATABASE_HYDRO.vwc(:,1)+dt-DATABASE_4(instant+7,1)));
                            Mat_vwc=DATABASE_HYDRO.vwc(ligne,2:end);
                            
                            Mat_vwc_2=Mat_vwc;
                            lignes_2=Mat_Z(1,:)==35;
                            moy=mean(Mat_vwc_2(1,lignes_2));
                            Mat_vwc_2(1,lignes_2)=moy;
                            
                            
                            
                            if instant==min(Matrix_instant)
                                Mat_vwc_init=Mat_vwc_2;
                            end
                            
                            ylim([5 40])
                            xlim([0 0.35])
                            %GS3
                            
                            %  text(Mat_vwc(1),)
                            %plot(Mat_vwc,Mat_Z,'Parent',ax2,'Color','k')
                            %plot(Mat_vwc,Mat_Z,'.-b','Markersize',30,'Parent',ax2)
                            plot(Mat_vwc,Mat_Z,'.b','Markersize',20,'Parent',ax2)
                            hold on
                            plot(Mat_vwc_2,Mat_Z,'-b','Markersize',20,'Parent',ax2)
                            
                            hold on
                            plot(Mat_vwc_init,Mat_Z,'--b','Markersize',10,'Parent',ax2)
                            DATABASE_HYDRO.cond_eau(:,1)
                            
                            text(Mat_vwc(1)+0.004,Mat_Z(1),[GS3_1_8.name,': \theta = ',num2str(round(Mat_vwc(1),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(2)+0.004,Mat_Z(2),[s5TM_16.name,': \theta = ',num2str(round(Mat_vwc(2),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(3)-0.02,Mat_Z(3)-1,[GS3_2_35.name,': \theta = ',num2str(round(Mat_vwc(3),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(4)+0.004,Mat_Z(4),[s5TE_35.name,': \theta = ',num2str(round(Mat_vwc(4),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(5)+0.004,Mat_Z(5),[EC_5_39.name,': \theta = ',num2str(round(Mat_vwc(5),2))],'FontSize',14,'Color','blue')
                            
                            
                            %            figure
                            %            plot(DATABASE_4(8:end,1),10000./DATABASE_4(8:end,6))
                            %            hold on
                            %            yyaxis right
                            %            plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,6))
                            %
                            %            [4.316564653000000e+04 0.411000000000000]
                            %            [4.316565018182223e+04 3.434312628727705]
                            %            dt=4.316565018182223e+04-4.316564653000000e+04;
                            
                            
                            ax2.Visible='off'
                            xlim([0 0.50])
                            grid
                            grid minor
                        end
                        
                    end
                    
                    % Indication de la date et var globale resist (partie haut gauche)
                    for o=1
                        DATABASE_MEAN=[DATABASE_4(8:end,1),median(DATABASE_4(8:end,2:end)','Omitnan')',min(DATABASE_3(8:end,2:end)')',max(DATABASE_3(8:end,2:end)')'];
                        
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        %axes('Position',[.60 .6 .25 .25])
                        axes('Position',[.07 .7 .25 .25])
                        %subplot(2,3,[1])
                        %box off
                        hold on
                        
                        plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                        
                        grid
                        grid minor
                        xlim([DATABASE_3(8,1) DATABASE_3(end,1)])
                        title('Évolution globale de la résistivité apparente')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        plot(DATABASE_MEAN(instant,1),DATABASE_MEAN(instant,2),'.r','MarkerSize',30)
                        xlim([T_init_1 T_fin_1])
                        
                        
                    end
                    
                    % Indication de la date et var globale teneur en eau (partie bas gauche)
                    for o=1
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        %axes('Position',[.60 .6 .25 .25])
                        axes('Position',[.07 .15 .25 .4])
                        %subplot(2,3,[1])
                        %box off
                        
                        dt=4.316565018182223e+04-4.316564653000000e+04;
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,2),'-','LineWidth',2)
                        
                        hold on
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,3),'-','LineWidth',2)
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,5),'-','LineWidth',2)
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,6),'-','LineWidth',2)
                        
                        % indication temps
                        line([DATABASE_MEAN(instant,1),DATABASE_MEAN(instant,1)],[0,10],'color','r','LineWidth',2)
                        
                        
                        grid
                        grid minor
                        xlim([DATABASE_3(8,1) DATABASE_3(end,1)])
                        title('Évolution la teneur en eau volumique')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        xlim([T_init_1 T_fin_1])
                        
                        ylim([0.0 0.4])
                    end
                    
                    saveas(gcf,['image_',num2str(t),'.jpg'])
                    
                end
            end
        end
    end
    
    %% Courbe de teneur en eau Archie
    actif=0;
    for o=1
        if actif==1
            for o=1
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                for o=1
                    DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                    figure('color',[1 1 1])
                    
                    pas_de_temps=5/24;
                    formatOut1 = 'dd/mm HH:MM';
                    formatOut2= 'dd/mm HH:MM AM';
                    formatOut3= 'HH:MM';
                    format=formatOut1;
                    
                    
                    hold on
                    
                    plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                    grid
                    grid minor
                    
                    title('Évolution globale de la résistivité apparente')
                    
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                    
                    ax.XTickLabelRotation=45;
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the starting time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_init_1=ginput(1);
                    T_init_1=round(T_init_1(:,1),2);
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the ending time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_fin_1=ginput(1);
                    T_fin_1=round(T_fin_1(:,1),2);
                    
                    xlim([T_init_1 T_fin_1])
                end
                
                close all
                t_max=30;
                
                % MISE EN FORME DATA GÉOPHYSIQUE
                for o=1
                    [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                    [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                    
                    DATABASE_3=DATABASE(T_INIT:T_FIN,:);
                    DATABASE_3=[DATABASE(1:7,:);DATABASE_3];
                    
                    load config_1
                    load config_2
                    CONFIG=[config_1;config_2];
                    
                    
                    for o=1
                        trouve=zeros(length(CONFIG),1);
                        for j=1:length(CONFIG)
                            C1=CONFIG(j,1);
                            C2=CONFIG(j,2);
                            P1=CONFIG(j,3);
                            P2=CONFIG(j,4);
                            for i=1:length(DATABASE_3(1,:))
                                if C1==DATABASE_3(1,i)&C2==DATABASE_3(2,i)&P1==DATABASE_3(3,i)&P2==DATABASE_3(4,i)
                                    trouve(j,1)=i;
                                end
                            end
                        end
                        
                        DATABASE_4=[DATABASE_3(:,1),DATABASE_3(:,trouve)];
                    end
                end
                %
                % MISE EN FORME DATA HYDRO
                for o=1
                    [~,T_INIT_hydro]=min(abs(EC_5_39.date(:,1)-T_init_1+0.004));
                    [~,T_FIN_hydro]=min(abs(EC_5_39.date(:,1)-T_fin_1+0.004));
                    
                    % vwc
                    for o=1
                        DATABASE_HYDRO.vwc=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[GS3_1_8.position';GS3_1_8.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[s5TM_16.position';s5TM_16.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[GS3_2_35.position';GS3_2_35.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[s5TE_35.position';s5TE_35.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.vwc=[DATABASE_HYDRO.vwc,[EC_5_39.position';EC_5_39.vwc(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.vwc=[DATABASE_HYDRO.vwc(4:end,1),median(DATABASE_HYDRO.vwc(4:end,:)','Omitnan')'];
                    end
                    
                    % temp
                    for o=1
                        DATABASE_HYDRO.temp=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[GS3_1_8.position';GS3_1_8.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[s5TM_16.position';s5TM_16.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[GS3_2_35.position';GS3_2_35.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.temp=[DATABASE_HYDRO.temp,[s5TE_35.position';s5TE_35.temp(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.temp=[DATABASE_HYDRO.temp(4:end,1),median(DATABASE_HYDRO.temp(4:end,:)','Omitnan')'];
                    end
                    
                    % cond
                    for o=1
                        DATABASE_HYDRO.cond=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[GS3_1_8.position';GS3_1_8.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[GS3_2_35.position';GS3_2_35.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond=[DATABASE_HYDRO.cond,[s5TE_35.position';s5TE_35.cond(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.cond=[DATABASE_HYDRO.cond(4:end,1),median(DATABASE_HYDRO.cond(4:end,:)','Omitnan')'];
                    end
                    
                    % cond_eau
                    for o=1
                        DATABASE_HYDRO.cond_eau=[0;0;0;EC_5_39.date(T_INIT_hydro:T_FIN_hydro,1)];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[GS3_1_8.position';GS3_1_8.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[GS3_2_35.position';GS3_2_35.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        DATABASE_HYDRO.cond_eau=[DATABASE_HYDRO.cond_eau,[s5TE_35.position';s5TE_35.cond_eau(T_INIT_hydro:T_FIN_hydro,1)]];
                        
                        DATABASE_HYDRO_MEAN.cond_eau=[DATABASE_HYDRO.cond_eau(4:end,1),median(DATABASE_HYDRO.cond_eau(4:end,:)','Omitnan')'];
                    end
                end
                
                DATABASE_WVC=DATABASE_4;
                
                % LOI ARCHIE
                % Resist_milieu = a * vwc ^-m * Resist_eau
                
                a=1;
                m=2;
                Resist_eau=32; %Ohms.m
                DATABASE_WVC(8:end,2:end)=(a*Resist_eau./DATABASE_4(8:end,2:end)).^(1/m);
                
                
                
                % Profil de teneur en eau
                figure('color',[1 1 1])
                instant=1;
                plot(DATABASE_WVC(instant+7,2:end),DATABASE_WVC(7,2:end),'.k','MarkerSize',20)
                
                figure('color',[1 1 1])
                
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                
                %
                close all
                Matrix_instant=[[10:2:20],[21:1:40],[45:20:120]];
                Matrix_instant=[[10:3:30],[31:1:50],[51:20:120]];
                %Matrix_instant=[40];
                %Matrix_instant=[10];
                
                for t=1:length(Matrix_instant)
                    instant=Matrix_instant(t);
                    %for instant=25
                    
                    % Corps principal de la figure
                    for o=1
                        figure('color',[1 1 1])
                        subplot(2,3,[2,3,5,6])
                        
                        % Profil de teneur en eau volumique calculée
                        for o=1
                            PROFIL_VERT_init=[DATABASE_WVC(7,2:end)',DATABASE_WVC(min(Matrix_instant)+7,2:end)'];
                            PROFIL_VERT_init=sortrows(PROFIL_VERT_init);
                            
                            PROFIL_VERT=[DATABASE_WVC(7,2:end)',DATABASE_WVC(instant+7,2:end)'];
                            PROFIL_VERT=sortrows(PROFIL_VERT);
                            
                            % TENEUR EN EAU VOLUMIQUE
                            plot(PROFIL_VERT(:,2),PROFIL_VERT(:,1),'.-k','MarkerSize',20)
                            hold on
                            plot(PROFIL_VERT_init(:,2),PROFIL_VERT_init(:,1),'.--k','MarkerSize',10)
                            %xlim([0.5 300])
                            %xlim([20 20000])
                            
                            title(['Profil vertical de teneur en eau vertical calculé dans la colonne le ',datestr(DATABASE_4(instant+7,1),'dd/mm'),' à ',datestr(DATABASE_4(instant+7,1),'HH:MM')],'Fontsize',15)
                            % title(['Profil vertical de conductivité électrique apparente dans la colonne le ',datestr(DATABASE_4(instant+7,1),'dd/mm'),' à ',datestr(DATABASE_4(instant+7,1),'HH:MM')],'Fontsize',15)
                            
                            ylabel('Élevation dans la colonne (cm)','Fontsize',14)
                            %xlabel('Conductivité électrique apparente dans la colonne (\muS/cm)','Fontsize',14)
                            xlabel('Teneur en eau volumique calculée dans la colonne (-)','Fontsize',14)
                            
                            ax1 = gca; % current axes
                            
                            xlim([0.1 0.5])
                            ylim([5 40])
                            ax1_pos = ax1.Position; % position of first axes
                            
                            grid
                            grid minor
                        end
                        
                        % Affichage des données VWC
                        for o=1
                            
                            
                            Mat_Z=DATABASE_HYDRO.vwc(3,2:end);
                            dt=4.316565018182223e+04-4.316564653000000e+04;
                            [~,ligne]=min(abs(DATABASE_HYDRO.vwc(:,1)+dt-DATABASE_4(instant+7,1)));
                            Mat_vwc=DATABASE_HYDRO.vwc(ligne,2:end);
                            
                            Mat_vwc_2=Mat_vwc;
                            lignes_2=Mat_Z(1,:)==35;
                            moy=mean(Mat_vwc_2(1,lignes_2));
                            Mat_vwc_2(1,lignes_2)=moy;
                            
                            
                            
                            if instant==min(Matrix_instant)
                                Mat_vwc_init=Mat_vwc_2;
                            end
                            
                            ylim([5 40])
                            %xlim([0 0.35])
                            %GS3
                            
                            %  text(Mat_vwc(1),)
                            %plot(Mat_vwc,Mat_Z,'Parent',ax2,'Color','k')
                            %plot(Mat_vwc,Mat_Z,'.-b','Markersize',30,'Parent',ax2)
                            plot(Mat_vwc,Mat_Z,'.b','Markersize',20)
                            hold on
                            % plot(Mat_vwc_2,Mat_Z,'-b','Markersize',20)
                            
                            hold on
                            plot(Mat_vwc_init,Mat_Z,'--b','Markersize',10)
                            DATABASE_HYDRO.cond_eau(:,1)
                            
                            text(Mat_vwc(1)+0.004,Mat_Z(1),[GS3_1_8.name,': \theta = ',num2str(round(Mat_vwc(1),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(2)+0.004,Mat_Z(2),[s5TM_16.name,': \theta = ',num2str(round(Mat_vwc(2),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(3)-0.02,Mat_Z(3)-1,[GS3_2_35.name,': \theta = ',num2str(round(Mat_vwc(3),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(4)+0.004,Mat_Z(4),[s5TE_35.name,': \theta = ',num2str(round(Mat_vwc(4),2))],'FontSize',14,'Color','blue')
                            text(Mat_vwc(5)+0.004,Mat_Z(5),[EC_5_39.name,': \theta = ',num2str(round(Mat_vwc(5),2))],'FontSize',14,'Color','blue')
                            
                            
                            %            figure
                            %            plot(DATABASE_4(8:end,1),10000./DATABASE_4(8:end,6))
                            %            hold on
                            %            yyaxis right
                            %            plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,6))
                            %
                            %            [4.316564653000000e+04 0.411000000000000]
                            %            [4.316565018182223e+04 3.434312628727705]
                            %            dt=4.316565018182223e+04-4.316564653000000e+04;
                            grid
                            grid minor
                            
                            xlim([0 0.50])
                            grid
                            grid minor
                        end
                        
                    end
                    
                    % Indication de la date et var globale resist (partie haut gauche)
                    for o=1
                        %DATABASE_MEAN=[DATABASE_4(8:end,1),median(DATABASE_4(8:end,2:end)','Omitnan')',min(DATABASE_3(8:end,2:end)')',max(DATABASE_3(8:end,2:end)')'];
                        DATABASE_MEAN_VWC=[DATABASE_WVC(8:end,1),median(DATABASE_WVC(8:end,2:end)','Omitnan')',min(DATABASE_WVC(8:end,2:end)')',max(DATABASE_WVC(8:end,2:end)')'];
                        
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        %axes('Position',[.60 .6 .25 .25])
                        axes('Position',[.07 .7 .25 .25])
                        %subplot(2,3,[1])
                        %box off
                        hold on
                        
                        plot(DATABASE_MEAN_VWC(:,1),DATABASE_MEAN_VWC(:,2),'-k','LineWidth',2)
                        
                        grid
                        grid minor
                        xlim([DATABASE_3(8,1) DATABASE_3(end,1)])
                        title('Évolution globale de la teneur en eau volumique')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        plot(DATABASE_MEAN_VWC(instant,1),DATABASE_MEAN_VWC(instant,2),'.r','MarkerSize',30)
                        xlim([T_init_1 T_fin_1])
                        
                        
                    end
                    
                    % Indication de la date et var globale teneur en eau (partie bas gauche)
                    for o=1
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        %axes('Position',[.60 .6 .25 .25])
                        axes('Position',[.07 .15 .25 .4])
                        %subplot(2,3,[1])
                        %box off
                        
                        dt=4.316565018182223e+04-4.316564653000000e+04;
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,2),'-','LineWidth',2)
                        
                        hold on
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,3),'-','LineWidth',2)
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,5),'-','LineWidth',2)
                        plot(DATABASE_HYDRO.vwc(4:end,1)+dt,DATABASE_HYDRO.vwc(4:end,6),'-','LineWidth',2)
                        
                        % indication temps
                        line([DATABASE_MEAN(instant,1),DATABASE_MEAN(instant,1)],[0,10],'color','r','LineWidth',2)
                        
                        
                        grid
                        grid minor
                        xlim([DATABASE_3(8,1) DATABASE_3(end,1)])
                        title('Évolution la teneur en eau volumique')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_3(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        xlim([T_init_1 T_fin_1])
                        
                        ylim([0.0 0.4])
                    end
                    
                    saveas(gcf,['image_',num2str(t),'.jpg'])
                    
                end
            end
        end
    end
    
    %% AFFICHAGE DES VALEURS DE RÉSISTIVITÉ DE L'EAU 2D Archie
    % Identification des temps à afficher
    actif=0;
    for o=1
        if actif==1
            for o=1
                DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                figure('color',[1 1 1])
                
                pas_de_temps=5/24;
                formatOut1 = 'dd/mm HH:MM';
                formatOut2= 'dd/mm HH:MM AM';
                formatOut3= 'HH:MM';
                format=formatOut1;
                
                
                hold on
                
                plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                grid
                grid minor
                
                title('Évolution globale de la résistivité apparente')
                
                ax = gca;
                ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                
                ax.XTickLabelRotation=45;
                
                p = get(gcf,'Position');
                for o=1
                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                    
                    txt = uicontrol('Parent',d,...
                        'Style','text',...
                        'Position',[100 200 210 80],...
                        'String',['Select the starting time'],...
                        'Fontsize',10);
                    
                    btn = uicontrol('Parent',d,...
                        'Position',[170 20 70 25],...
                        'String','Close',...
                        'Callback','delete(gcf)');
                end % Dialog box
                
                T_init_1=ginput(1);
                T_init_1=round(T_init_1(:,1),2);
                
                p = get(gcf,'Position');
                for o=1
                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                    
                    txt = uicontrol('Parent',d,...
                        'Style','text',...
                        'Position',[100 200 210 80],...
                        'String',['Select the ending time'],...
                        'Fontsize',10);
                    
                    btn = uicontrol('Parent',d,...
                        'Position',[170 20 70 25],...
                        'String','Close',...
                        'Callback','delete(gcf)');
                end % Dialog box
                
                T_fin_1=ginput(1);
                T_fin_1=round(T_fin_1(:,1),2);
                
                xlim([T_init_1 T_fin_1])
            end
            
            close all
            t_max=30;
            for t=1:t_max;
                actif_tronc=1;
                %instant=2605+t*1;
                %instant=2375+t*2;
                %instant=95+t*10;
                %T_INIT=425;
                %T_INIT=120;
                [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                dT_ligne=round((T_FIN-T_INIT)/30);
                %dT=4;
                dT=dT_ligne;
                
                instant=T_INIT+t*dT;
                instant_max=T_INIT+t_max*dT;
                instant_min=T_INIT;
                
                for o=1
                    p = get(gcf,'Position');
                    set(0,'DefaultFigurePosition',p);
                    %close all
                    
                    % Calcul résistivité électrique de l'eau avec Archie
                    % LOI ARCHIE
                    % Resist_milieu = a * vwc ^-m * Resist_eau
                    
                    DATABASE_Res_eau=DATABASE;
                    
                    a=1;
                    m=2;
                    VWC_Essai=0.394; %(-) : porosité dans la colonne
                    DATABASE_Res_eau(8:end,2:end)=DATABASE(8:end,2:end)./(a*VWC_Essai^(-m));
                    
                    
                    
                    
                    
                    % Traitement de la base de données
                    for o=1
                        if actif_tronc==1 & t==1
                            figure('Color', [ 1 1 1])
                            histogram(log(DATABASE_Res_eau(8:end,2:end)))
                            title('Histogramme de valeurs de résistivité apparente (Ohm.m)','FontSize',16)
                            %axis off
                            TicksM = min(min(log(DATABASE_Res_eau(8:end,2:end)))):(max(max(log(DATABASE_Res_eau(8:end,2:end))))-min(min(log(DATABASE_Res_eau(8:end,2:end)))))/10:max(max(log(DATABASE_Res_eau(8:end,2:end))));
                            TicksL = round(exp(TicksM),0);
                            ax = gca;
                            ax.XTick=TicksM;
                            ax.XTickLabel =round(exp(TicksM),0);
                            grid
                            grid minor
                            
                            
                            % Troncature MIN au choix de l'utilisateur
                            p = get(gcf,'Position');
                            for o=1
                                d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur minimale de resistivité');
                                
                                txt = uicontrol('Parent',d,...
                                    'Style','text',...
                                    'Position',[100 200 210 80],...
                                    'String',['Select the minimum resistivity value needed in Ohm.m (log values)'],...
                                    'Fontsize',10);
                                
                                btn = uicontrol('Parent',d,...
                                    'Position',[170 20 70 25],...
                                    'String','Close',...
                                    'Callback','delete(gcf)');
                            end % Dialog box
                            
                            CutOff_MIN=ginput(1);
                            CutOff_MIN=round(CutOff_MIN(:,1),2);
                            
                            % Troncature MAX au choix de l'utilisateur
                            p = get(gcf,'Position');
                            for o=1
                                d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de la valeur maximale de resistivité');
                                
                                txt = uicontrol('Parent',d,...
                                    'Style','text',...
                                    'Position',[100 200 210 80],...
                                    'String',['Select the maximum resistivity value needed in Ohm.m (log values)'],...
                                    'Fontsize',10);
                                
                                btn = uicontrol('Parent',d,...
                                    'Position',[170 20 70 25],...
                                    'String','Close',...
                                    'Callback','delete(gcf)');
                            end % Dialog box
                            
                            CutOff_MAX=ginput(1);
                            CutOff_MAX=round(CutOff_MAX(:,1),2);
                            
                            close
                            % echelle de couleur de 0 a 1
                            % echelle de valeur de R_min a R_max
                            DATABASE_Res_eau_2=DATABASE_Res_eau;
                            
                            %                         load K_correctif
                            %                         for j=8:length(DATABASE_2(:,1))
                            %                             DATABASE_2(j,2:end)=DATABASE_2(j,2:end).*K_correctif;
                            %                         end
                            
                            
                            DATABASE_Res_eau_2(8:end,2:end)=log(DATABASE_Res_eau_2(8:end,2:end));
                            mat_1=DATABASE_Res_eau_2(8:end,2:end)<=CutOff_MIN;
                            mat_2=[zeros(length(DATABASE_Res_eau_2(:,1))-7,1),mat_1];
                            mat_3=[zeros(7,length(DATABASE_Res_eau_2(1,:)));mat_2];
                            DATABASE_Res_eau_2(logical(mat_3))=CutOff_MIN;
                            
                            mat_1=DATABASE_Res_eau_2(8:end,2:end)>=CutOff_MAX;
                            mat_2=[zeros(length(DATABASE_Res_eau_2(:,1))-7,1),mat_1];
                            mat_3=[zeros(7,length(DATABASE_Res_eau_2(1,:)));mat_2];
                            DATABASE_Res_eau_2(logical(mat_3))=CutOff_MAX;
                            
                            DATABASE_Res_eau_2(8:end,2:end)=DATABASE_Res_eau_2(8:end,2:end)-CutOff_MIN;
                            DATABASE_Res_eau_2(8:end,2:end)=DATABASE_Res_eau_2(8:end,2:end)/(CutOff_MAX-CutOff_MIN)*100;
                            
                            % 0->1
                            mat_1=DATABASE_Res_eau_2(8:end,2:end)==0;
                            mat_2=[zeros(length(DATABASE_Res_eau_2(:,1))-7,1),mat_1];
                            mat_3=[zeros(7,length(DATABASE_Res_eau_2(1,:)));mat_2];
                            DATABASE_Res_eau_2(logical(mat_3))=1;
                        end
                    end
                    
                    % Représentation 3D de la colonne
                    for o=1
                        %                 figure('color',[1 1 1])
                        %                 plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
                        %                 hold on
                        %
                        %                 [xc,yc,zc]=cylinder(13,40);
                        %                 zc=zc*40;
                        %                 surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.3)
                        %
                        %                 daspect([1,1,1])
                        %                 %     xlim([-10 10])
                        %                 %     ylim([-10 10])
                        %                 %     zlim([0 100])
                        %                 for i=1:16
                        %                     text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
                        %                 end
                        %
                        %                 grid
                        %                 grid minor
                        %
                        %                 xlabel('X (cm)')
                        %                 ylabel('Y (cm)')
                        %                 zlabel('Z (cm)')
                        %
                        %                 % Instru hydrogéo
                        %                 sonde=EC_5_39;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=GS3_1_8;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=GS3_2_35;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=s5TE_35;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=s5TM_16;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    end
                    
                    
                    
                    % Maillage et imagerie 2D de la colonne
                    for o=1
                        Xmin=-13;
                        Xmax=13;
                        Zmin=0;
                        Zmax=40;
                        pas_X=0.05;
                        pas_Z=0.05;
                        [X_coupe,Z_coupe] = meshgrid(Xmin:pas_X:Xmax,Zmin:pas_Z:Zmax);
                        
                        X_DATA=DATABASE_Res_eau_2(5,2:end)';
                        Z_DATA=DATABASE_Res_eau_2(7,2:end)';
                        V_DATA=DATABASE_Res_eau_2(instant,2:end)';
                        value = griddata(X_DATA,Z_DATA,V_DATA,X_coupe,Z_coupe,'cubic');
                        
                        figure('Color', [ 1 1 1])
                        colormap ((jet(100)));
                        cmap = colormap;
                        pcolor(X_coupe,Z_coupe,value);
                        shading flat
                        hold on
                        contour(X_coupe,Z_coupe,value,10,'LineWidth',0.7,'LineColor','k')
                        daspect([1 1 1])
                        
                        % Electrodes
                        %plot(ELEC(:,1),ELEC(:,3),'k.','MarkerSize',10)
                        % Colorbar
                        % Légende
                        caxis([0 100]);
                        TicksM = [1;20;40;60;80;100];
                        TicksL = round(exp((TicksM/100)*(CutOff_MAX-CutOff_MIN)+CutOff_MIN),0);
                        
                        
                        c=colorbar;
                        c.Label.String = 'Résistivité électrique de l''eau calculée (\Omega.m)';
                        c.Label.FontWeight='bold';
                        c.Label.FontSize=14;
                        c.Ticks=TicksM;
                        c.TickLabels={num2str(TicksL)};
                        c.Location='eastoutside';
                        
                        title(['Distribution de la résistivité électrique de l''eau dans la colonne le ',datestr(DATABASE_Res_eau_2(instant,1),'dd/mm'),' à ',datestr(DATABASE_Res_eau_2(instant,1),'HH:MM')],'Fontsize',15)
                    end
                    % Indication de la date
                    for o=1
                        DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                        
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        axes('Position',[.05 .6 .25 .25])
                        %box off
                        hold on
                        
                        plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                        grid
                        grid minor
                        xlim([DATABASE_MEAN(instant_min,1) DATABASE_MEAN(instant_max,1)])
                        title('Évolution globale de la résistivité apparente')
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_Res_eau_2(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_Res_eau_2(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                        plot(DATABASE_MEAN(instant-7,1),DATABASE_MEAN(instant-7,2),'.r','MarkerSize',30)
                    end
                    
                    saveas(gcf,['image_',num2str(t),'.jpg'])
                    
                    
                end
            end
        end
    end
    
    %% AFFICHAGE DES VALEURS DE RÉSISTIVITÉ DE L'EAU 2D Archie VARIATION RELATIVE
    % Identification des temps à afficher
    actif=0;
    for o=1
        if actif==1
            for o=1
                DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                figure('color',[1 1 1])
                
                pas_de_temps=5/24;
                formatOut1 = 'dd/mm HH:MM';
                formatOut2= 'dd/mm HH:MM AM';
                formatOut3= 'HH:MM';
                format=formatOut1;
                
                
                hold on
                
                plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                grid
                grid minor
                
                title('Évolution globale de la résistivité apparente')
                
                ax = gca;
                ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                
                ax.XTickLabelRotation=45;
                
                p = get(gcf,'Position');
                for o=1
                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                    
                    txt = uicontrol('Parent',d,...
                        'Style','text',...
                        'Position',[100 200 210 80],...
                        'String',['Select the starting time'],...
                        'Fontsize',10);
                    
                    btn = uicontrol('Parent',d,...
                        'Position',[170 20 70 25],...
                        'String','Close',...
                        'Callback','delete(gcf)');
                end % Dialog box
                
                T_init_1=ginput(1);
                T_init_1=round(T_init_1(:,1),2);
                
                p = get(gcf,'Position');
                for o=1
                    d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                    
                    txt = uicontrol('Parent',d,...
                        'Style','text',...
                        'Position',[100 200 210 80],...
                        'String',['Select the ending time'],...
                        'Fontsize',10);
                    
                    btn = uicontrol('Parent',d,...
                        'Position',[170 20 70 25],...
                        'String','Close',...
                        'Callback','delete(gcf)');
                end % Dialog box
                
                T_fin_1=ginput(1);
                T_fin_1=round(T_fin_1(:,1),2);
                
                xlim([T_init_1 T_fin_1])
            end
            
            
            close all
            t_max=30;
            for t=1:t_max;
                actif_tronc=1;
                %instant=2605+t*1;
                %instant=2375+t*2;
                %instant=95+t*10;
                %T_INIT=425;
                %T_INIT=120;
                [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                dT_ligne=round((T_FIN-T_INIT)/30);
                %dT=4;
                dT=dT_ligne;
                
                instant=T_INIT+t*dT;
                instant_max=T_INIT+t_max*dT;
                instant_min=T_INIT;
                
                for o=1
                    p = get(gcf,'Position');
                    set(0,'DefaultFigurePosition',p);
                    %close all
                    
                    % Calcul résistivité électrique de l'eau avec Archie
                    % LOI ARCHIE
                    % Resist_milieu = a * vwc ^-m * Resist_eau
                    
                    DATABASE_Res_eau=DATABASE;
                    
                    a=1;
                    m=2;
                    VWC_Essai=0.394; %(-) : porosité dans la colonne
                    DATABASE_Res_eau(8:end,2:end)=DATABASE(8:end,2:end)./(a*VWC_Essai^(-m));
                    
                    
                    
                    % CLUSTERING DE L'EAU
                    for o=1
                        % Clustering de l'eau
                        Tolerance=70; % (en % calculé sur la conductivité)
                        
                        % Premier type d'Eau
                        %Res_Eau_1=2.9;
                        %Res_Eau_1=3;
                        Res_Eau_1=32;
                        
                        Res_Eau_1_min=1/(1/Res_Eau_1+Tolerance*1/Res_Eau_1/100);
                        Res_Eau_1_max=1/(1/Res_Eau_1-Tolerance*1/Res_Eau_1/100);
                        
                        % Second type d'Eau
                        Res_Eau_2=187;
                        
                        Res_Eau_2_min=1/(1/Res_Eau_2+Tolerance*1/Res_Eau_2/100);
                        Res_Eau_2_max=1/(1/Res_Eau_2-Tolerance*1/Res_Eau_2/100);
                        
                        % MATRICE CLUSTER
                        DATABASE_Res_eau_cluster=DATABASE_Res_eau;
                        
                        %Mat_cluster
                        Mat_cluster=50*ones(length(DATABASE_Res_eau_cluster(8:end,1)),length(DATABASE_Res_eau_cluster(1,2:end)));
                        %                         % type 1
                        %                         Mat_cluster(DATABASE_Res_eau(8:end,2:end)<Res_Eau_1_max&DATABASE_Res_eau(8:end,2:end)>Res_Eau_1_min)=1;
                        %                         % type 2
                        %                         Mat_cluster(DATABASE_Res_eau(8:end,2:end)<Res_Eau_2_max&DATABASE_Res_eau(8:end,2:end)>Res_Eau_2_min)=100;
                        %
                        % type 1
                        Mat_cluster(DATABASE_Res_eau(8:end,2:end)<Res_Eau_1_max)=1;
                        % type 2
                        Mat_cluster(DATABASE_Res_eau(8:end,2:end)>Res_Eau_2_min)=100;
                        
                        
                        DATABASE_Res_eau_cluster(8:end,2:end)=Mat_cluster;
                        
                    end
                    
                    % Représentation 3D de la colonne
                    for o=1
                        %                 figure('color',[1 1 1])
                        %                 plot3(ELEC(:,1),ELEC(:,2),ELEC(:,3),'.k','MarkerSize',20)
                        %                 hold on
                        %
                        %                 [xc,yc,zc]=cylinder(13,40);
                        %                 zc=zc*40;
                        %                 surf(xc,yc,zc,'EdgeColor','none','FaceColor',[0.5,0.5,0.5],'FaceAlpha',0.3)
                        %
                        %                 daspect([1,1,1])
                        %                 %     xlim([-10 10])
                        %                 %     ylim([-10 10])
                        %                 %     zlim([0 100])
                        %                 for i=1:16
                        %                     text(ELEC(i,1)+1,ELEC(i,2)-1,ELEC(i,3),num2str(i));
                        %                 end
                        %
                        %                 grid
                        %                 grid minor
                        %
                        %                 xlabel('X (cm)')
                        %                 ylabel('Y (cm)')
                        %                 zlabel('Z (cm)')
                        %
                        %                 % Instru hydrogéo
                        %                 sonde=EC_5_39;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=GS3_1_8;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=GS3_2_35;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=s5TE_35;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                        %                 sonde=s5TM_16;
                        %                 plot3(sonde.position(1),sonde.position(2),sonde.position(3),'.b','MarkerSize',30)
                        %                 text(sonde.position(1)+1,sonde.position(2)-1,sonde.position(3),sonde.name);
                    end
                    
                    % Maillage et imagerie 2D de la colonne
                    for o=1
                        Xmin=-13;
                        Xmax=13;
                        Zmin=0;
                        Zmax=40;
                        pas_X=1;
                        pas_Z=1;
                        [X_coupe,Z_coupe] = meshgrid(Xmin:pas_X:Xmax,Zmin:pas_Z:Zmax);
                        
                        X_DATA=DATABASE_Res_eau_cluster(5,2:end)';
                        Z_DATA=DATABASE_Res_eau_cluster(7,2:end)';
                        V_DATA=DATABASE_Res_eau_cluster(instant,2:end)';
                        value = griddata(X_DATA,Z_DATA,V_DATA,X_coupe,Z_coupe,'nearest');
                        
                        figure('Color', [ 1 1 1])
                        colormap ((jet(3)));
                        cmap = colormap;
                        pcolor(X_coupe,Z_coupe,value);
                        shading flat
                        hold on
                        %contour(X_coupe,Z_coupe,value,10,'LineWidth',0.7,'LineColor','k')
                        daspect([1 1 1])
                        
                        % Electrodes
                        %plot(ELEC(:,1),ELEC(:,3),'k.','MarkerSize',10)
                        % Colorbar
                        % Légende
                        caxis([0 100]);
                        TicksM = [1;50;100];
                        TicksL = [1;0;2];
                        
                        
                        c=colorbar;
                        c.Label.String = 'Type d''eau dans la colonne';
                        c.Label.FontWeight='bold';
                        c.Label.FontSize=14;
                        c.Ticks=TicksM;
                        c.TickLabels={num2str(TicksL)};
                        c.Location='eastoutside';
                        
                        title(['Distribution de la résistivité électrique de l''eau dans la colonne le ',datestr(DATABASE_Res_eau_cluster(instant,1),'dd/mm'),' à ',datestr(DATABASE_Res_eau_cluster(instant,1),'HH:MM')],'Fontsize',15)
                    end
                    
                    % Indication de la date
                    for o=1
                        DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                        DATABASE_MEAN_Cluster=[DATABASE(8:end,1),median(DATABASE_Res_eau_cluster(8:end,2:end)','Omitnan')',min(DATABASE_Res_eau_cluster(8:end,2:end)')',max(DATABASE_Res_eau_cluster(8:end,2:end)')'];
                        
                        
                        pas_de_temps=1/24/15;
                        %pas_de_temps=1/24;
                        formatOut1 = 'dd/mm HH:MM';
                        formatOut2= 'dd/mm HH:MM AM';
                        formatOut3= 'dd/mm HH:MM';
                        format=formatOut3;
                        
                        %axes('Position',[.57 .6 .4 .4],'Visible','off')
                        axes('Position',[.05 .6 .25 .25])
                        %box off
                        hold on
                        
                        plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                        %                     plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                        grid
                        grid minor
                        xlim([DATABASE_MEAN(instant_min,1) DATABASE_MEAN(instant_max,1)])
                        title('Évolution globale de la résistivité apparente et du type d''eau')
                        plot(DATABASE_MEAN(instant-7,1),DATABASE_MEAN(instant-7,2),'.r','MarkerSize',30)
                        
                        
                        hold on
                        yyaxis right
                        plot(DATABASE_MEAN_Cluster(:,1),DATABASE_MEAN_Cluster(:,2),'-b','LineWidth',2)
                        ax = gca;
                        ax.YTick=[0;50;100];
                        %ax.YTickLabel ='eau résistive';'mélange';'eau conductrice';
                        ylim([0 100])
                        
                        ax = gca;
                        ax.XTick=[pas_de_temps*unique(round(DATABASE_Res_eau_cluster(8:end,1)/pas_de_temps))];
                        ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE_Res_eau_cluster(8:end,1)/pas_de_temps)),format)];
                        
                        ax.XTickLabelRotation=45;
                        
                    end
                    
                    saveas(gcf,['image_',num2str(t),'.jpg'])
                    
                    
                end
            end
        end
    end
    
    %% Courbe de teneur en eau Archie a différents instants
    actif=1;
    for o=1
        if actif==1
            for o=1
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                for o=1
                    DATABASE_MEAN=[DATABASE(8:end,1),median(DATABASE(8:end,2:end)','Omitnan')',min(DATABASE(8:end,2:end)')',max(DATABASE(8:end,2:end)')'];
                    figure('color',[1 1 1])
                    
                    pas_de_temps=5/24;
                    formatOut1 = 'dd/mm HH:MM';
                    formatOut2= 'dd/mm HH:MM AM';
                    formatOut3= 'HH:MM';
                    format=formatOut1;
                    
                    
                    hold on
                    
                    plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,2),'-k','LineWidth',2)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,3),'--k','LineWidth',1)
                    %                 plot(DATABASE_MEAN(:,1),DATABASE_MEAN(:,4),'--k','LineWidth',1)
                    grid
                    grid minor
                    
                    title('Évolution globale de la résistivité apparente')
                    
                    ax = gca;
                    ax.XTick=[pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps))];
                    ax.XTickLabel =[datestr(pas_de_temps*unique(round(DATABASE(8:end,1)/pas_de_temps)),format)];
                    
                    ax.XTickLabelRotation=45;
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant initial');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the starting time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_init_1=ginput(1);
                    T_init_1=round(T_init_1(:,1),2);
                    
                    p = get(gcf,'Position');
                    for o=1
                        d = dialog('Position',[p(1)+800,p(2)+300,400,400],'Name','Choix de l''instant final');
                        
                        txt = uicontrol('Parent',d,...
                            'Style','text',...
                            'Position',[100 200 210 80],...
                            'String',['Select the ending time'],...
                            'Fontsize',10);
                        
                        btn = uicontrol('Parent',d,...
                            'Position',[170 20 70 25],...
                            'String','Close',...
                            'Callback','delete(gcf)');
                    end % Dialog box
                    
                    T_fin_1=ginput(1);
                    T_fin_1=round(T_fin_1(:,1),2);
                    
                    xlim([T_init_1 T_fin_1])
                end
                
                
                % MISE EN FORME DATA GÉOPHYSIQUE
                for o=1
                    [~,T_INIT]=min(abs(DATABASE(:,1)-T_init_1));
                    [~,T_FIN]=min(abs(DATABASE(:,1)-T_fin_1));
                    
                    DATABASE_3=DATABASE(T_INIT:T_FIN,:);
                    DATABASE_3=[DATABASE(1:7,:);DATABASE_3];
                    
                    load config_1
                    load config_2
                    CONFIG=[config_1;config_2];
                    
                    
                    for o=1
                        trouve=zeros(length(CONFIG),1);
                        for j=1:length(CONFIG)
                            C1=CONFIG(j,1);
                            C2=CONFIG(j,2);
                            P1=CONFIG(j,3);
                            P2=CONFIG(j,4);
                            for i=1:length(DATABASE_3(1,:))
                                if C1==DATABASE_3(1,i)&C2==DATABASE_3(2,i)&P1==DATABASE_3(3,i)&P2==DATABASE_3(4,i)
                                    trouve(j,1)=i;
                                end
                            end
                        end
                        
                        DATABASE_4=[DATABASE_3(:,1),DATABASE_3(:,trouve)];
                    end
                end
                %
                
                DATABASE_WVC=DATABASE_4;
                
                % LOI ARCHIE
                % Resist_milieu = a * vwc ^-m * Resist_eau
                
                a=1;
                m=2;
                Resist_eau=32; %Ohms.m
                DATABASE_WVC(8:end,2:end)=(a*Resist_eau./DATABASE_4(8:end,2:end)).^(1/m);
                
                %%
                % Valeurs minimales
                MIN_VWC=[DATABASE_WVC(7,2:end);min(DATABASE_WVC(8:end,2:end))]';
                MIN_VWC=sortrows(MIN_VWC);
                
                % Valeurs maximales
                MAX_VWC=[DATABASE_WVC(7,2:end);max(DATABASE_WVC(8:end,2:end))]';
                MAX_VWC=sortrows(MAX_VWC);
                
                
                % Profil de teneur en eau
                p = get(gcf,'Position');
                set(0,'DefaultFigurePosition',p);
                figure('color',[1 1 1])
                Mat_Instant=[1,45,60,80,100,200];
                for temps=1:length(Mat_Instant)
                    temps_i=Mat_Instant(temps);
                    ITE_VWC=[DATABASE_WVC(7,2:end);DATABASE_WVC(temps_i+7,2:end)]';
                    ITE_VWC=sortrows(ITE_VWC);
                    
                    plot(ITE_VWC(:,2),ITE_VWC(:,1),'.-','MarkerSize',20,'DisplayName',[datestr(DATABASE_WVC(temps_i+7,1),'HH:MM:SS')])
                    hold on
                    title(['Profil vertical de teneur en eau vertical calculé dans la colonne'],'Fontsize',15)
                    % title(['Profil vertical de conductivité électrique apparente dans la colonne le ',datestr(DATABASE_4(instant+7,1),'dd/mm'),' à ',datestr(DATABASE_4(instant+7,1),'HH:MM')],'Fontsize',15)
                    
                    ylabel('Élevation dans la colonne (cm)','Fontsize',14)
                    %xlabel('Conductivité électrique apparente dans la colonne (\muS/cm)','Fontsize',14)
                    xlabel('Teneur en eau volumique calculée dans la colonne (-)','Fontsize',14)
                    xlim([0 0.4])
                    ylim([0 40])
                end
                plot(MIN_VWC(:,2),MIN_VWC(:,1),'.--k')
                plot(MAX_VWC(:,2),MAX_VWC(:,1),'.--k')
                legend show
                %%
                
            end
        end
    end
end


